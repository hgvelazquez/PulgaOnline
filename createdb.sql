-- Quitar el comentario a la siguiente lìnea si hay que modificar la base
-- o se quiere volver a crear desde cero.
-- DROP DATABASE "PulgaOnline";

-- Postgres no admite CREATE IF NOT EXISTS
CREATE DATABASE "PulgaOnline";

-- Creación del usuario para nuestra base de datos.
-- Puede eliminar esta línea si ya tiene un usuario creado 
-- para conectar su aplicación de Flask.
CREATE USER your_db_user WITH PASSWORD 'your_password';

-- Cambiamos a la base de datos correspondiente.
\c PulgaOnline;

-- Creación de las tablas.

DROP TABLE IF EXISTS usuario;
CREATE TABLE usuario (
    
    id_usuario int NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nombre varchar(50) NOT NULL,
    correo varchar(50) NOT NULL,
    contrasena varchar(50) NOT NULL,
    tipo_usuario boolean NOT NULL,
    -- Dirección
    calle varchar(50),
    numExt varchar(10),
    colonia varchar(50),
    ciudad varchar(50),
    estado varchar(50),

    PRIMARY KEY (id_usuario),
    UNIQUE (correo)
);

DROP TABLE IF EXISTS categoria;
CREATE TABLE categoria(
    nombre varchar(50) NOT NULL,

    UNIQUE (nombre),
    PRIMARY KEY (nombre)
);

DROP TABLE IF EXISTS producto;
CREATE TABLE producto (
    id_producto int NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    disponible int NOT NULL,
    nombre varchar(50) NOT NULL,
    descripcion varchar(200) NOT NULL,
    precio float(24) NOT NULL,
    imagen varchar(100) NOT NULL,
    categoria varchar(50) NOT NULL,
    id_vendedor int NOT NULL,

    PRIMARY KEY (id_producto),
    FOREIGN KEY (categoria) REFERENCES categoria (nombre),
    FOREIGN KEY (id_vendedor) REFERENCES usuario (id_usuario)
);

-- Una vez creada la tabla hay que darle los permisos correspondientes
-- al usuario para realizar las operaciones necesarias para el proyecto.
-- Las tablas son creadas en el esquema público por defecto.
GRANT USAGE ON SCHEMA public TO your_db_user;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO your_db_user;

-- Creamos las categorías. No habrá cambios en esta tabla.
INSERT INTO categoria (nombre)
VALUES 
    ('Accesorios'),
    ('Belleza'), 
    ('Decoración'),
    ('Deportivo'),
    ('Educación'),
    ('Electrónica'),
    ('Electrodomésticos'),
    ('Joyería'),
    ('Ropa');

-- Inserción de un usuario de prueba para poder agregar productos
-- sin implementar la creación de usuarios. 
-- Puede eliminar esta línea sin problema. 
INSERT INTO usuario (nombre, correo, contrasena, tipo_usuario)
VALUES
    ('Vendedor de prueba', 'prueba@testing.com', 'some_hash_func', TRUE);
